<resources>
    <!-- Base application theme -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="TicTacToeButton">
        <item name="android:layout_width">100dp</item>
        <item name="android:layout_height">100dp</item>
        <item name="android:textSize">24sp</item>
        <item name="android:layout_margin">4dp</item>
    </style>
</resources>
themes xml

<resources>
    <!-- Base application theme -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="TicTacToeButton">
        <item name="android:layout_width">100dp</item>
        <item name="android:layout_height">100dp</item>
        <item name="android:textSize">24sp</item>
        <item name="android:layout_margin">4dp</item>
    </style>
</resources>
styles xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:background="@color/backgroundColor"
    tools:context=".MainActivity">

    <GridLayout
        android:id="@+id/gridLayout"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:columnCount="3"
        android:rowCount="3">

        <Button
            android:id="@+id/button1"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_1_desc" />
        <Button
            android:id="@+id/button2"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_2_desc" />
        <Button
            android:id="@+id/button3"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_3_desc" />
        <Button
            android:id="@+id/button4"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_4_desc" />
        <Button
            android:id="@+id/button5"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_5_desc" />
        <Button
            android:id="@+id/button6"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_6_desc" />
        <Button
            android:id="@+id/button7"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_7_desc" />
        <Button
            android:id="@+id/button8"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_8_desc" />
        <Button
            android:id="@+id/button9"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_9_desc" />

    </GridLayout>

    <Button
        android:id="@+id/resetButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/reset_button"
        android:layout_marginTop="16dp"
        android:textColor="@color/buttonTextColor"
        android:background="?attr/selectableItemBackground"
        android:contentDescription="@string/reset_button_desc" />

</LinearLayout>
strings xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:background="@color/backgroundColor"
    tools:context=".MainActivity">

    <GridLayout
        android:id="@+id/gridLayout"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:columnCount="3"
        android:rowCount="3">

        <Button
            android:id="@+id/button1"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_1_desc" />
        <Button
            android:id="@+id/button2"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_2_desc" />
        <Button
            android:id="@+id/button3"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_3_desc" />
        <Button
            android:id="@+id/button4"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_4_desc" />
        <Button
            android:id="@+id/button5"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_5_desc" />
        <Button
            android:id="@+id/button6"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_6_desc" />
        <Button
            android:id="@+id/button7"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_7_desc" />
        <Button
            android:id="@+id/button8"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_8_desc" />
        <Button
            android:id="@+id/button9"
            style="@style/TicTacToeButton"
            android:contentDescription="@string/button_9_desc" />

    </GridLayout>

    <Button
        android:id="@+id/resetButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/reset_button"
        android:layout_marginTop="16dp"
        android:textColor="@color/buttonTextColor"
        android:background="?attr/selectableItemBackground"
        android:contentDescription="@string/reset_button_desc" />

</LinearLayout>
activity xml


package com.example.tictactoe;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private boolean playerXTurn = true; // Истинно, если очередь игрока X, ложно, если очередь игрока O
    private final Button[][] buttons = new Button[3][3];

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        GridLayout gridLayout = findViewById(R.id.gridLayout);
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j] = (Button) gridLayout.getChildAt(i * 3 + j);
                buttons[i][j].setOnClickListener(new ButtonClickListener(i, j));
            }
        }

        Button resetButton = findViewById(R.id.resetButton);
        resetButton.setOnClickListener(v -> resetGame());
    }

    private class ButtonClickListener implements View.OnClickListener {
        int row, col;

        ButtonClickListener(int row, int col) {
            this.row = row;
            this.col = col;
        }

        @Override
        public void onClick(View v) {
            if (!((Button) v).getText().toString().isEmpty()) {
                return;
            }

            if (playerXTurn) {
                ((Button) v).setText("X");
            } else {
                ((Button) v).setText("O");
            }

            if (checkForWin()) {
                if (playerXTurn) {
                    showMessage("Игрок X победил!");
                } else {
                    showMessage("Игрок O победил!");
                }
                disableButtons();
            } else if (isBoardFull()) {
                showMessage("Ничья!");
            } else {
                playerXTurn = !playerXTurn;
            }
        }
    }

    private boolean checkForWin() {
        String[][] field = new String[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                field[i][j] = buttons[i][j].getText().toString();
            }
        }

        for (int i = 0; i < 3; i++) {
            if (field[i][0].equals(field[i][1]) && field[i][0].equals(field[i][2]) && !field[i][0].isEmpty()) {
                return true;
            }
        }

        for (int i = 0; i < 3; i++) {
            if (field[0][i].equals(field[1][i]) && field[0][i].equals(field[2][i]) && !field[0][i].isEmpty()) {
                return true;
            }
        }

        if (field[0][0].equals(field[1][1]) && field[0][0].equals(field[2][2]) && !field[0][0].isEmpty()) {
            return true;
        }

        return field[0][2].equals(field[1][1]) && field[0][2].equals(field[2][0]) && !field[0][2].isEmpty();
    }

    private boolean isBoardFull() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (buttons[i][j].getText().toString().isEmpty()) {
                    return false;
                }
            }
        }
        return true;
    }

    private void disableButtons() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j].setEnabled(false);
            }
        }
    }

    private void resetGame() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j].setText("");
                buttons[i][j].setEnabled(true);
            }
        }
        playerXTurn = true;
    }

    private void showMessage(String message) {
        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();
    }
} 
MainActivity
